import * as React from "react";
import { useSelector, useDispatch } from "react-redux";
import { TextField, Button, Container, Paper, Typography, Stack, SelectChangeEvent, InputLabel, Select,MenuItem } from '@mui/material';
import styled from '@emotion/styled';
import { useEffect } from 'react';
import { getItemCotizacion, updateItemCotizacion, addtemCotizacion, getElementsCotizacionChoice } from '../../../../store/actions/CotizacionActions';
import { resetItemCotizacion, setItemCotizacion } from './helper';
import { ChoiceField } from "../../../typeFields/ChoiceField";
import { UserFilterField } from "../../../typeFields/UserFilterField";
// Estilos personalizados
const StyledPaper = styled(Paper)`
  padding: 20px;
  margin-top: 20px;
`;
const EditCotizacion: React.FC = () => {
    const dispatch = useDispatch<any>();
    const { userName, error } = useSelector(
        (state: any) => state.sharepointReducer
    );
    const { item: currentItem, error: errorCotizacion, elementsTipoGestion, elementsCrm, elementsCartaNombramiento, elementsTipoCobertura, elementsEnviadoCliente, elementsAseguradora, elementsDecisionCliente, usersSolicitaCotizacion, usersHcb } = useSelector(
        (state: any) => state.cotizacionReducer
    );



    const [formData, setFormData] = React.useState(resetItemCotizacion());
    const [selectedOption, setSelectedOption] = React.useState<string>('');

    useEffect(() => {
        if (currentItem) {
            setFormData(setItemCotizacion(currentItem));
        } else {
            setFormData(resetItemCotizacion());
        }
    }, [currentItem]);

    /*     useEffect(() => {
            dispatch(getItemCotizacion());
        }, [dispatch]); 
     */

    const handleChange = (event: any) => {
        const { name, value } = event.target;
        setFormData({
            ...formData,
            [name]: value
        });
    };

    const handleChoiceChange = (event: SelectChangeEvent<{ value: unknown }>) => {
        setSelectedOption(event.target.value as string);
    };

    const handleSubmit = (event: any) => {
        event.preventDefault();
        if (currentItem.id) {
            dispatch(updateItemCotizacion(currentItem));
        } else {
            dispatch(addtemCotizacion(currentItem));
        }
        setFormData(setItemCotizacion(currentItem));
    };
    return (

        <Container component="main" maxWidth="md">
            <StyledPaper elevation={3}>
                <Typography variant="h5">{formData.id ? 'Editar Cotización' : 'Agregar Cotización'}</Typography>
                <form onSubmit={handleSubmit}>
                    <TextField name="usuarioSolicitaCotización"
                        label="UsuarioSolicitaCotización"
                        variant="outlined"
                        fullWidth
                        margin="normal"
                        value={JSON.stringify(usersSolicitaCotizacion)} />
                    <Stack spacing={2} direction="row" sx={{ marginBottom: 4 }}>
                        <TextField
                            name="id"
                            label="Id"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.id}
                            onChange={handleChange}
                        />
                        <TextField
                            name="cuit"
                            label="Cuit"
                            type="number"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.cuit}
                            onChange={handleChange}
                        />
                        <TextField
                            name="areaSolicitud"
                            label="AreaSolicitud"
                            type="string"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.areaSolicitud}
                            onChange={handleChange}
                        />

                    </Stack>
                    <Stack spacing={2} direction="row" sx={{ marginBottom: 4 }}>
                  
                         <UserFilterField
                            name="usuarioSolicitaCotización"
                            label="Usuario Solicita Cotización"
                            users={usersSolicitaCotizacion}
                            value={formData.usuarioSolicitaCotización}
                            onChange={handleChange}
                            title=""
                        /> 
                        <ChoiceField
                            label="Tipo de Gestión"
                            options={elementsTipoGestion}
                            value={formData.tipoGestión}
                            onChange={handleChange}
                            helperText="Please select an option"
                        />
                        <ChoiceField
                            label="CRM"
                            options={elementsCrm}
                            value={formData.crm}
                            onChange={handleChange}
                            helperText="Please select an option"
                        />

                    </Stack>
                    <Stack spacing={2} direction="row" sx={{ marginBottom: 4 }}>
                        <TextField
                            name="ejecutivoHCB"
                            label="EjecutivoHCB"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.ejecutivoHCB}
                            onChange={handleChange}
                        />
                        <ChoiceField
                            label="Carta de Nombramiento"
                            options={elementsCartaNombramiento}
                            value={formData.cartaNombramiento}
                            onChange={handleChange}
                            helperText="Please select an option"
                        />
                        <ChoiceField
                            label="Tipo de Cobertura"
                            options={elementsTipoCobertura}
                            value={formData.tipoCobertura}
                            onChange={handleChange}
                            helperText="Please select an option"
                        />

                    </Stack>
                    <Stack spacing={2} direction="row" sx={{ marginBottom: 4 }}>
                        <TextField
                            name="númeroPóliza"
                            label="NúmeroPóliza"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.númeroPóliza}
                            onChange={handleChange}
                        />
                        <TextField
                            name="premioMensualActual"
                            label="Premio Mensual Actual"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.premioMensualActual}
                            onChange={handleChange}
                        />
                        <TextField
                            name="comisionActual"
                            label="Comision Actual"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.comisionActual}
                            onChange={handleChange}
                        />

                    </Stack>
                    <Stack spacing={2} direction="row" sx={{ marginBottom: 4 }}>
                        <ChoiceField
                            label="Enviado al Cliente"
                            options={elementsEnviadoCliente}
                            value={formData.enviadoCliente}
                            onChange={handleChange}
                            helperText="Please select an option"
                        />
                        <TextField
                            name="observaciones"
                            label="Observaciones"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.observaciones}
                            onChange={handleChange}
                        />
                        <TextField
                            name="fechaEnvíoCliente"
                            label="Fecha Envío Cliente"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            value={formData.fechaEnvíoCliente}
                            onChange={handleChange}
                        />

                    </Stack>
                    <Button
                        type="submit"
                        variant="contained"
                        color="primary"
                        fullWidth
                        style={{ marginTop: 20 }}
                    >
                        {formData.id ? 'Actualizar' : 'Agregar'}
                    </Button>
                </form>
            </StyledPaper>
        </Container>
    );
};

export default EditCotizacion;
