import { AxiosResponse } from "../model/AxiosResponse";
import list from "../___mocks/cotizacion/list.json";
import { cleanUrl, axiosInstance } from "../utils/configApi";

const sleep = async (ms: number): Promise<void> => {
  return new Promise((resolve) => setTimeout(resolve, ms));
};

export const getCotizacionList = async (): Promise<AxiosResponse> => {
  await sleep(1000);
  return {
    data: list,
    status: 200,
    statusText: "OK",
  };
  /*  return axios
    .post(
      cleanUrl("/_api/web/lists/getbytitle('Vida - Cotización - New')")
    )
    .then((response) => {
      const { status, statusText, data }: AxiosResponse = response;
      if (status !== 200) {
        console.error("getCotizacionList: status is not 200", {
          status,
          data,
          statusText,
        });
      }
      return {
        data: data.value,
        status,
        statusText,
      };
    })
    .catch((error) => {
      console.error("getCotizacionList failed", error);
      throw error;
    });
 */
};

export const getCotizacion = async (itemId: number): Promise<AxiosResponse> => {
   await sleep(1000);
   return {
    data:list?.value[0],
    status: 200,
    statusText:'OK'
  }; 

/*   try {

    console.warn("getCotizacion: init");
    const response = await axiosInstance.get(
      cleanUrl(`/web/lists/getbytitle('Vida - Cotización - New')/items(${itemId})?timestamp=${new Date().getTime()}`)
    );

    const { status, statusText, data }: AxiosResponse = response;
    console.warn("getCotizacion: status is not 200", {
      status,
      data,
      statusText,
    });
    if (status !== 200) {
      console.error("getCotizacion: status is not 200", {
        status,
        data,
        statusText,
      });
    }
  
    return {
      data: data?.value,
      status,
      statusText,
    };
  } catch (error) {
    console.error("getCotizacion  failed", error);
    throw error;
  } finally {
    console.log("getCotizacion  finally");
  } */
};
